<!doctype html><html lang="en"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/><title>üî• Five Forks Fire Weather</title><link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/><script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" defer></script><script src="https://unpkg.com/@turf/turf@6/turf.min.js" defer></script><style>:root{--bg:#0f172a;--text:#e5e7eb;--card:#111827;--border:#334155;--brand:#3b82f6;--muted:#9ca3af}*{box-sizing:border-box}body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;background:var(--bg);color:var(--text)}header{background:var(--brand);color:#fff;padding:.75rem 1rem;display:flex;justify-content:space-between;align-items:center;gap:.5rem;flex-wrap:wrap}h1{margin:0;font-size:1.05rem}.menu{display:flex;gap:.5rem;flex-wrap:wrap}.btn,.menu a,select.btn{background:#fff;color:#111;border:1px solid #e5e7eb;padding:.35rem .6rem;border-radius:9999px;text-decoration:none;font-size:.85rem;cursor:pointer}.btn[disabled]{opacity:.6;cursor:progress}main{display:grid;gap:1rem;padding:1rem}.cards{display:grid;gap:1rem;grid-template-columns:repeat(auto-fit,minmax(240px,1fr))}.card{background:var(--card);border:1px solid var(--border);border-radius:14px;padding:.9rem;box-shadow:0 1px 4px rgba(0,0,0,.25)}.meta{font-size:.8rem;color:var(--muted);text-align:right}.map-wrap{height:520px;border-radius:14px;overflow:hidden;border:1px solid var(--border)}footer{color:var(--muted);text-align:center;padding:1rem}.pill{display:inline-flex;align-items:center;gap:.35rem;padding:.25rem .5rem;border-radius:9999px;border:1px solid var(--border);background:#fff;color:#111;font-size:.75rem}.ok{color:#10b981;border-color:#10b981}.warn{color:#f59e0b;border-color:#f59e0b}.err{color:#ef4444;border-color:#ef4444}.flags{display:flex;gap:.35rem;flex-wrap:wrap;margin-top:.35rem}.flag{font-weight:700;font-size:.8rem}.flash{color:#ef4444;animation:flash 1s steps(2,end) infinite}@keyframes flash{50%{opacity:.2}}.legend{font-size:.8rem;color:var(--muted)}.legend code{background:#0b1225;border:1px solid var(--border);border-radius:6px;padding:.1rem .3rem;color:#e5e7eb}details summary{cursor:pointer}.leaflet-container{height:100%;width:100%}</style></head><body><header><h1>üî• Five Forks Fire Weather</h1><nav class="menu" aria-label="Primary"><button id="unitBtn" class="btn" title="Toggle ¬∞F/¬∞C">¬∞F</button><button id="refreshBtn" class="btn" title="Refresh">üîÑ Refresh</button><label for="radiusSel" class="btn" title="Hotspot radius (km)" style="display:inline-flex;gap:.4rem;align-items:center">Radius<select id="radiusSel" class="btn" style="margin-left:.25rem"><option value="20">20 km</option><option value="30">30 km</option><option value="40">40 km</option></select></label><span id="statusPill" class="pill" style="display:none">‚Äî</span><a href="https://www.weather.gov/akq/" target="_blank" rel="noopener">AKQ</a><a href="https://www.weather.gov/akq/FIREMAIN" target="_blank" rel="noopener">AKQ Fire</a><a href="https://fs-prod-nwcg.s3.us-gov-west-1.amazonaws.com/s3fs-public/publication/pms461.pdf" target="_blank" rel="noopener">IRPG</a></nav></header><main><div class="legend"><details><summary>‚ÑπÔ∏è Fire weather rules used here</summary><div style="margin-top:.4rem"><div><strong>30/30/30 rule</strong>: higher danger when <code>T ‚â• 30¬∞C (86¬∞F)</code>, <code>RH ‚â§ 30%</code>, and <code>Wind ‚â• 30 km/h (~18 mph)</code>.</div><div><strong>Crossover</strong>: when <code>Temperature (¬∞F) ‚â• Relative Humidity (%)</code>.</div><div>We flag <strong>NEAR</strong> if values are within ~10% (e.g., T ‚â• 28¬∞C, RH ‚â§ 33%, Wind ‚â• 16 mph) or 5¬∞F for crossover.</div></div></details></div><div id="updated" class="meta">Last updated: ‚Äî</div><section id="cards" class="cards" aria-live="polite" aria-busy="false"></section><section class="map-wrap" aria-label="Active wildfire hotspots map"><div id="map" style="height:100%"></div></section></main><footer>Data: NOAA & NASA FIRMS ‚Ä¢ Updates hourly</footer><script>const COUNTIES=[{name:"Amelia",lat:37.342,lon:-77.98},{name:"Nottoway",lat:37.142,lon:-78.089},{name:"Dinwiddie",lat:37.077,lon:-77.587},{name:"Prince George",lat:37.221,lon:-77.288},{name:"Brunswick",lat:36.758,lon:-77.847},{name:"Greensville",lat:36.686,lon:-77.542}],FIRMS_SOURCES=["https://firms.modaps.eosdis.nasa.gov/active_fire/viirs/geojson/VIIRS_I_NRT_USA_contiguous_and_Hawaii_24h.geojson","https://firms.modaps.eosdis.nasa.gov/active_fire/c6.1/geojson/MODIS_C6_1_USA_contiguous_and_Hawaii_24h.geojson"];let unit=localStorage.getItem("ff:unit")||"F",lastSuccessAt=0,currentCtrl=null,radiusKm=parseInt(localStorage.getItem("ff:radius")||"30",10);const hourlyUrlCache=new Map,$=e=>document.querySelector(e),fmtStamp=(e=new Date)=>e.toLocaleString(void 0,{hour12:!0}),toC=e=>Math.round(5*(e-32)/9);function setStatus(e,t){const n=$("#statusPill");n&&(n.className="pill "+(t||""),n.textContent=e,("ok"===t||"Fresh"===e)?n.style.display="none":n.style.display="")}async function fetchJSON(e,{signal:t,headers:n}={}){const a=await fetch(e,{signal:t,headers:n});if(!a.ok)throw new Error("HTTP "+a.status+" for "+e);return a.json()}function el(e,t={},...n){const a=document.createElement(e);for(const[i,o]of Object.entries(t||{}))"class"===i?a.className=o:"text"===i?a.textContent=o:a.setAttribute(i,o);for(const e of n)"string"==typeof e?a.appendChild(document.createTextNode(e)):e&&a.appendChild(e);return a}function dewPointC(e,t){if(!Number.isFinite(e)||!Number.isFinite(t)||t<=0||t>100)return null;const n=17.625,a=243.04,i=Math.log(t/100)+n*e/(a+e);return a*i/(n-i)}function parseWindMph(e){if(!e||"string"!=typeof e)return null;const t=(e.match(/\d+/g)||[]).map((e=>parseInt(e,10)));return t.length?Math.max(...t):null}function flags303030(e,t,n){const a=null!=e?(e-32)*5/9:null,i=parseWindMph(n),o=null!=a&&null!=t&&null!=i&&a>=30&&t<=30&&i>=18,r=!o&&(((null!=a&&a>=28)?1:0)+((null!=t&&t<=33)?1:0)+((null!=i&&i>=16)?1:0)>=2);return{within:o,near:r}}function flagsCrossover(e,t){if(null==e||null==t)return{within:!1,near:!1};const n=e>=t,a=!n&&e+5>=t;return{within:n,near:a}}async function fetchWeather(e,t,n){try{const a=e.toFixed(3)+","+t.toFixed(3);let i=hourlyUrlCache.get(a);if(!i){const r=await fetchJSON(`https://api.weather.gov/points/${e},${t}`,{signal:n,headers:{Accept:"application/geo+json"}});i=r&&r.properties?r.properties.forecastHourly:null;if(!i)throw new Error("No hourly URL");hourlyUrlCache.set(a,i)}const o=await fetchJSON(i,{signal:n,headers:{Accept:"application/geo+json"}}),s=o&&o.properties&&o.properties.periods?o.properties.periods[0]:null;return s?{tempF:Number.isFinite(s.temperature)?s.temperature:null,rh:Math.round(s.relativeHumidity&&typeof s.relativeHumidity.value=="number"?s.relativeHumidity.value:NaN),wind:[s.windSpeed||"",s.windDirection||""].filter(Boolean).join(" "),short:s.shortForecast||"‚Äî"}:null}catch(e){return console.warn("NOAA fetch error",e),null}}async function fetchAllFirms(e){const t=await Promise.allSettled(FIRMS_SOURCES.map((t=>fetchJSON(t,{signal:e}))));const n=t.filter((e=>"fulfilled"===e.status)).map((e=>e.value));if(!n.length)return{type:"FeatureCollection",features:[]};const a=new Set,i=[];for(const e of n){const t=e&&e.features?e.features:[];for(const e of t){if(!(e&&e.geometry&&"Point"===e.geometry.type))continue;const t=e.geometry.coordinates,o=t[0].toFixed(3)+","+t[1].toFixed(3);a.has(o)||(a.add(o),i.push(e))}}return{type:"FeatureCollection",features:i}}function renderCard(e,t,n){const a=t&&Number.isFinite(t.tempF)?t.tempF:null,i=null!=a?"C"===unit?toC(a)+"¬∞C":Math.round(a)+"¬∞F":"‚Äî",o=t&&Number.isFinite(t.rh)?t.rh:null,r=null!=o?o+"% RH":"‚Äî% RH",l=null!=a?5*(a-32)/9:null,c=null!=l&&null!=o?dewPointC(l,o):null,d=null!=c?"C"===unit?Math.round(c)+"¬∞C":Math.round(9*c/5+32)+"¬∞F":"‚Äî",u=t&&t.wind?" ¬∑ "+t.wind:"",p=Number.isFinite(n)?" ¬∑ üî• "+n:"",f=t?flags303030(a,o,t.wind):{within:!1,near:!1},m=t?flagsCrossover(a,o):{within:!1,near:!1},y=el("div",{class:"flags"});return f.within?y.appendChild(el("span",{class:"flag flash",title:"30/30/30 met: T‚â•30¬∞C, RH‚â§30%, Wind‚â•30 km/h",text:"30/30/30"})):f.near&&y.appendChild(el("span",{class:"flag flash",title:"Near 30/30/30 (within ~10%)",text:"NEAR 30/30/30"})),m.within?y.appendChild(el("span",{class:"flag flash",title:"Crossover met: Temp ¬∞F ‚â• RH %",text:"CROSSOVER"})):m.near&&y.appendChild(el("span",{class:"flag flash",title:"Near crossover (‚â§5¬∞F)",text:"NEAR CROSSOVER"})),el("div",{class:"card"},el("strong",{text:e}),el("br"),el("span",{text:`${i} ¬∑ ${r} ¬∑ DP ${d}${u}`}),el("br"),el("span",{text:(t?t.short:"Weather unavailable")+p}),y)}function countHotspotsNear(e,t,n,a){if(!(e&&e.features&&e.features.length))return 0;const i=turf.circle([n,t],a,{units:"kilometers"}),o=[];for(const t of e.features)t.geometry&&"Point"===t.geometry.type&&o.push(t.geometry.coordinates);if(!o.length)return 0;const r=turf.points(o),l=turf.pointsWithinPolygon(r,i);return l.features.length}async function refresh(){currentCtrl&&currentCtrl.abort();const e=new AbortController;currentCtrl=e,setStatus("Loading‚Ä¶"),$("#refreshBtn").setAttribute("disabled","true"),$("#cards").setAttribute("aria-busy","true"),$("#updated").textContent="Last updated: "+fmtStamp();try{const[t,n]=await Promise.all([fetchAllFirms(e.signal),Promise.all(COUNTIES.map((t=>fetchWeather(t.lat,t.lon,e.signal))))]),a=document.createDocumentFragment();COUNTIES.forEach(((e,i)=>{const o=countHotspotsNear(t,e.lat,e.lon,radiusKm);a.appendChild(renderCard(e.name,n[i],o))})),$("#cards").replaceChildren(a),lastSuccessAt=Date.now(),setStatus("Fresh","ok"),ensureMap(t)}catch(e){if("AbortError"===e.name)return;console.warn(e),setStatus("Error","err")}finally{$("#cards").setAttribute("aria-busy","false"),$("#refreshBtn").removeAttribute("disabled")}}let map,firmsLayer,centersLayer,fitted=!1;function ensureMap(e){map||(map=L.map("map").setView([37.1,-77.5],8),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"¬© OpenStreetMap contributors"}).addTo(map),firmsLayer=L.layerGroup().addTo(map),centersLayer=L.layerGroup().addTo(map),L.control.layers({}, {"üî• Hotspots":firmsLayer,"üìç County centers":centersLayer},{collapsed:!0}).addTo(map)),firmsLayer.clearLayers(),centersLayer.clearLayers(),L.geoJSON(e,{pointToLayer:(e,t)=>L.circleMarker(t,{radius:5,fillColor:"#ff3b30",color:"#ff3b30",weight:1,opacity:1,fillOpacity:.8}).bindPopup("üî• Fire detected")}).addTo(firmsLayer),COUNTIES.forEach((e=>{L.circleMarker([e.lat,e.lon],{radius:6,color:"#2563eb",weight:2,fillOpacity:.2}).bindPopup(`<strong>${e.name}</strong>`).addTo(centersLayer)})),fitted||(function(){try{const e=L.featureGroup([firmsLayer,centersLayer]);map.fitBounds(e.getBounds().pad(.2))}catch(e){}fitted=!0}())}$("#unitBtn").textContent="¬∞"+unit,$("#unitBtn").addEventListener("click",(()=>{unit="F"===unit?"C":"F",localStorage.setItem("ff:unit",unit),$("#unitBtn").textContent="¬∞"+unit,refresh()})),$("#refreshBtn").addEventListener("click",refresh);const radiusSel=$("#radiusSel");radiusSel&&(radiusSel.value=String(radiusKm),radiusSel.addEventListener("change",(()=>{radiusKm=parseInt(radiusSel.value,10)||30,localStorage.setItem("ff:radius",String(radiusKm)),refresh()})));function updateOnlineStatus(){navigator.onLine?lastSuccessAt&&Date.now()-lastSuccessAt>9e4?setStatus("Stale","warn"):lastSuccessAt&&setStatus("Fresh","ok"):setStatus("Offline","err")}window.addEventListener("online",updateOnlineStatus),window.addEventListener("offline",updateOnlineStatus),refresh(),setInterval(refresh,36e5);</script></body></html>
